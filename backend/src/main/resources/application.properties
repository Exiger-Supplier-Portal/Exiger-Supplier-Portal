spring.config.import=file:.env[.properties]

spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

# Use Hibernate to auto-update our database tables
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Spring Security OAuth2 config with Okta
spring.security.oauth2.client.provider.okta.issuer-uri=${OKTA_DOMAIN}
spring.security.oauth2.client.registration.okta.client-id=${OKTA_CLIENT_ID}
spring.security.oauth2.client.registration.okta.client-secret=${OKTA_CLIENT_SECRET}
spring.security.oauth2.client.registration.okta.scope=openid,profile,offline_access

# CORS Configuration
cors.allowed.origins=${CORS_ALLOWED_ORIGINS}

# Frontend URLs
app.frontend.url=http://localhost:3000
app.frontend.dashboard.url=${app.frontend.url}/dashboard

# API Token for external integrations
api.token=${API_TOKEN:default-secure-token}

# SpringDoc OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Okta Management API Token for user creation
okta.api.token=${OKTA_API_TOKEN}
